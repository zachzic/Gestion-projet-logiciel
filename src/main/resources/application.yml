# Configuration du serveur
server:
  port: 8080
  servlet:
    context-path: /gestion-projet

# Configuration de la source de données
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password:
    url: jdbc:mysql://localhost:3307/gestion_projet_logiciel
  # Configuration JPA
  jpa:
    hibernate:
      ddl-auto: update
      # La valeur "update" permet à Hibernate de générer automatiquement les tables si elles n'existent pas
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        # Le dialecte Hibernate pour MySQL
        format_sql: true
        # Afficher le SQL formaté dans la console
      show-sql: true
      # Afficher les requêtes SQL dans la console

  # Configuration de la console H2 (utile pour les tests en mémoire)
  h2:
    console:
      # Activer la console H2
      enabled: true

  security:
    oauth2:
      resource-server:
        jwt:
          issuer-uri: http://localhost:8180/realms/gestion-projet

# Configuration de l'application spécifique à Keycloak
app:
  keycloak:
    server:
      url: http://localhost:8180
    realm:
      name: gestion-projet
    client-id: gestion-projet
    client-secret: SKCLsloHZyrFbtb5Kcm8s3B3vFvEHkCZ
    admin:
      username: zachzic
      password: '#1001001+'
    login:
      url: http://localhost:8180/realms/gestion-projet/protocol/openid-connect/token


    ssl-required: external
    use-resource-role-mappings: true

jwt:
  auth:
    converter:
      resource-id: gestion-projet
      principal-attribute: preferred_username
logging:
  level:
    org.springframework.security: DEBUG
